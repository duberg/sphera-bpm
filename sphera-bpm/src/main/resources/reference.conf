sphera {
  bpm {
    notification {
      debug = true
      mail {
        smtp {
          auth = true
          starttls.enable = true
          host = "mail.sphera.org"
          ssl.trust = "mail.sphera.org"
          port = 587
          #socketFactory.port = 587
          #socketFactory.class = "javax.net.ssl.SSLSocketFactory"
          connectiontimeout = 2000
          timeout = 6000
        }
        from = "noreply@sphera"
        username = "noreply"
        password = ""
      }
      sms {
        api-url = ""
        api-key = ""
        api-salt = ""
        route = "commands/sms"
        from-extension = 101 // идентификатор сотрудника (internal number)
      }
    }
  }
}

akka {

  actor.debug.receive = off
  loglevel = INFO
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
}

//akka {
//  actor {
//    serializers.bpmSerializer = "sphera.bpm.serialization.BpmSerializer"
//    serialization-bindings {
//      "sphera.bpm.definition.Definitions" = bpmSerializer
//      "sphera.bpm.definition.StringDefinition" = bpmSerializer
//      "sphera.bpm.definition.BooleanDefinition" = bpmSerializer
//      "sphera.bpm.definition.DecimalDefinition" = bpmSerializer
//      "sphera.bpm.definition.IntDefinition" = bpmSerializer
//      "sphera.bpm.storage.DefinitionStorage$UpdatedDataElementEvt" = bpmSerializer
//      "sphera.bpm.storage.DefinitionStorage$UpdatedDataEvt" = bpmSerializer
//      "sphera.bpm.storage.ExceptionStorage$ExceptionEvt" = bpmSerializer
//      "sphera.bpm.project.actor.ProjectManagerState" = bpmSerializer
//      "sphera.bpm.project.actor.ProjectManagerActor$CreatedProjectInfoEvt" = bpmSerializer
//      "sphera.bpm.project.actor.ProjectManagerActor$UpdatedProjectInfoEvt" = bpmSerializer
//      "sphera.bpm.project.actor.ProjectManagerActor$DeletedProjectInfoEvt" = bpmSerializer
//      "sphera.bpm.project.actor.ProjectState" = bpmSerializer
//      "sphera.bpm.process.actor.ProcessManagerState" = bpmSerializer
//      "sphera.bpm.process.actor.ProcessManagerActor$CreatedProcessInfoEvt" = bpmSerializer
//      "sphera.bpm.process.actor.ProcessManagerActor$UpdatedProcessInfoEvt" = bpmSerializer
//      "sphera.bpm.process.actor.ProcessManagerActor$DeletedProcessInfoEvt" = bpmSerializer
//      "sphera.bpm.process.actor.ProcessState" = bpmSerializer
//      "sphera.bpm.process.actor.ProcessActor$ActivatedEvt" = bpmSerializer
//      "sphera.bpm.process.actor.operation.ParallelGatewayOperationActor$State" = bpmSerializer
//      "sphera.bpm.process.actor.operation.UserTaskOperationActor$State" = bpmSerializer
//      "sphera.bpm.process.actor.operation.OperationActor$ActivatedEvt" = bpmSerializer
//      "sphera.bpm.task.actor.TaskManagerState" = bpmSerializer
//      "sphera.bpm.task.actor.TaskManagerActor$CreatedTaskInfoEvt" = bpmSerializer
//      "sphera.bpm.task.actor.TaskManagerActor$UpdatedTaskInfoEvt" = bpmSerializer
//      "sphera.bpm.task.actor.TaskManagerActor$DeletedTaskInfoEvt" = bpmSerializer
//      "sphera.bpm.task.actor.UserTaskState" = bpmSerializer
//      "sphera.bpm.history.actor.HistoryManagerState" = bpmSerializer
//      "sphera.bpm.history.actor.HistoryManagerActor$CreatedHistoryDataEvt" = bpmSerializer
//      "sphera.bpm.notification.actor.SmsVerificationActor$CreatedVerificationEvt" = bpmSerializer
//      "sphera.bpm.notification.actor.SmsVerificationActor$DeletedVerificationEvt" = bpmSerializer
//      "sphera.bpm.notification.actor.SmsVerificationState" = bpmSerializer
//    }
//  }
//}